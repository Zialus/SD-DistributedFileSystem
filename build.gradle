plugins {
    id "se.patrikerdes.use-latest-versions" version "0.2.8"
    id "com.github.ben-manes.versions" version "0.20.0"
    id "net.ltgt.errorprone" version "0.7.1"
//    id "com.github.spotbugs" version "1.6.10"
    id "java"
    id "idea"
}

group 'FCUP'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.0'

    compile 'org.jline:jline:3.10.0'

//    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.8.0'
//    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.4.3'

    errorprone 'com.google.errorprone:error_prone_core:2.3.3'
    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fcup.Editor'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

// Don't produce default Jar
jar.enabled = false

def jarPackage(groupName, artifactName, artifactVersion) {
    return tasks.create("jar${artifactName}", Jar) {
        baseName = artifactName
        version = artifactVersion
        String group = groupName

        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

        from(sourceSets.main.output) {
            include "$groupName/**"
        }

        manifest {
            attributes(
                    'Specification-Title': "$baseName",
                    'Specification-Version': "$version",
                    'Main-Class': "$group.$baseName"
            )
        }

    }
}

artifacts {
    archives jarPackage("$group", "StorageServer", "$version"),
            jarPackage("$group", "Client", "$version"),
            jarPackage("$group", "MetadataServer", "$version")
}
