buildscript {
    configurations.maybeCreate('pitest')
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.5'
        pitest 'org.pitest:pitest-junit5-plugin:0.10'
    }
}

plugins {
    id 'info.solidsoft.pitest' version '1.4.5'
    id "se.patrikerdes.use-latest-versions" version "0.2.13"
    id "com.github.ben-manes.versions" version "0.27.0"
//    id "net.ltgt.errorprone" version "1.1.1"
//    id "com.github.spotbugs" version "2.0.1"
    id "pmd"
//    id 'checkstyle'
    id "java"
    id "idea"
    id 'jacoco'
}

group 'fcup'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.6.0-M1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.6.0-M1'

    compile 'org.jline:jline:3.13.1'

//    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
//    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.4.7'

//    errorprone 'com.google.errorprone:error_prone_core:2.3.3'
//    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

// Don't produce default Jar
jar.enabled = false

def jarPackage(String groupName, String artifactName, String artifactVersion) {
    return tasks.create("jar_${artifactName}", Jar) {
        getArchiveBaseName().set(artifactName)
        getArchiveVersion().set(artifactVersion)

        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

        from(sourceSets.main.output) {
            include "$groupName/**"
        }

        manifest {
            attributes(
                    'Main-Class': "$groupName.$artifactName"
            )
        }

    }
}

artifacts {
    archives jarPackage("$group", "StorageServer", "$version"),
            jarPackage("$group", "Client", "$version"),
            jarPackage("$group", "MetadataServer", "$version")
}

pmd {
    ignoreFailures = true
}

pitest {
    testPlugin.set("junit5")
}

jacocoTestReport {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

//tasks.withType(com.github.spotbugs.SpotBugsTask) {
//    ignoreFailures = true
//
//    reports {
//        xml.enabled = false
//        html.enabled = true
//    }
//}